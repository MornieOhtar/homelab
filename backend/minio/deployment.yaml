apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
spec:
  selector:
    app: minio
  ports:
    - name: console
      protocol: TCP
      port: 9090
      targetPort: 9090
    - name: api
      protocol: TCP
      port: 9000
      targetPort: 9000
  type: ClusterIP
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
  annotations:
    avp.kubernetes.io/path: "kv/data/argocd"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      nodeSelector:
        node-role.kubernetes.io/nas: "nas"
      containers:
        - name: minio
          image: minio/minio:latest
          command:
            - /bin/bash
            - -c
          args:
            - minio server /data --console-address :9090
          env:
            - name: MINIO_ROOT_USER
              value: <minio_root_user>
            - name: MINIO_ROOT_PASSWORD
              value: <minio_root_password>
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
          volumeMounts:
            - mountPath: /data
              name: localvolume # Corresponds to the `spec.volumes` Persistent Volume
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/live
              port: api
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          ports:
            - containerPort: 9090
              name: console
              protocol: TCP
            - containerPort: 9000
              name: api
              protocol: TCP
      volumes:
        - name: localvolume
          hostPath:
            path: <NFS_N0_PATH>/minio
            type: Directory
