global:
  domain: argocd.homelab.local

configs:
  cmp:
    create: true
    plugins:
      argocd-vault-plugin:
        allowConcurrency: true
        discover:
          find:
            command:
              - sh
              - "-c"
              - "find . -name '*.yaml' | xargs -I {} grep \"<path\\|avp\\.kubernetes\\.io\" {} | grep ."
        generate:
          command:
            - argocd-vault-plugin
            - generate
            - "."
  repositories:
    argo-cd:
      url: https://argoproj.github.io/argo-helm
      name: Argo-CD
      type: helm
    ingress-nginx:
      url: https://kubernetes.github.io/ingress-nginx
      name: Ingress-Nginx
      type: helm
    bitnamicharts:
      url: registry-1.docker.io/bitnamicharts
      name: Bitnami Charts
      type: helm
      enableOCI: "true"
    mornieohtar:
      url: https://github.com/MornieOhtar/homelab
      name: Mornery homelab
      type: git

controller:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: operators
      selector:
        prometheus: prometheus-operator

dex:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: operators
      selector:
        prometheus: prometheus-operator

server:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: operators
      selector:
        prometheus: prometheus-operator
  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: argocd.homelab.local
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS

repoServer:
  initContainers:
    - name: download-tools
      image: registry.access.redhat.com/ubi8
      env:
        - name: AVP_VERSION
          value: 1.16.1
      command: [sh, -c]
      args:
        - >-
          curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin &&
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  extraContainers:
    - name: avp
      command: [/var/run/argocd/argocd-cmp-server]
      image: registry.access.redhat.com/ubi8
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp
        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: argocd-vault-plugin.yaml
          name: cmp-plugin
        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin
  volumes:
    - configMap:
        name: argocd-cmp-cm
      name: cmp-plugin
    - name: custom-tools
      emptyDir: {}
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: operators
      selector:
        prometheus: prometheus-operator

applicationSet:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: operators
      selector:
        prometheus: prometheus-operator

notifications:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: operators
      selector:
        prometheus: prometheus-operator
