kind: Service
apiVersion: v1
metadata:
  name: tdarr
  labels:
    app.kubernetes.io/name: tdarr
  annotations:
    external-dns.alpha.kubernetes.io/hostname: tdarr.homelab.local
spec:
  selector:
    app.kubernetes.io/name: tdarr
  type: LoadBalancer
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 8265
    - protocol: TCP
      name: server
      port: 8266
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tdarr
  annotations:
    app.kubernetes.io/name: tdarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tdarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tdarr
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: "nas"
          operator: "Equal"
          value: "true"
          effect: NoSchedule
      automountServiceAccountToken: false
      containers:
      - name: tdarr
        image: haveagitgat/tdarr:2.40.01
        imagePullPolicy: Always
        env:
          - name: TZ
            value: Europe/Kyiv
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: serverURL
            value: tdarr.home:8266
          - name: webUIPort
            value: "8265"
          - name: internalNode
            value: "false"
          - name: nodeID
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        securityContext:
          privileged: true
        ports:
          - containerPort: 8265
            name: ui
          - containerPort: 8266
            name: server
        volumeMounts:
          - mountPath: /app/configs
            name: config
          - mountPath: /app/server
            name: server
          - mountPath: /app/logs
            name: logs
          - mountPath: /temp
            name: transcode-cache
          - mountPath: /video
            name: video
      volumes:
        - name: logs
          nfs:
            server: nfs.homelab
            path: /share/n0/system/tdarr/logs
        - name: config
          nfs:
            server: nfs.homelab
            path: /share/n0/system/tdarr/config
        - name: server
          nfs:
            server: nfs.homelab
            path: /share/n0/system/tdarr/server
        - name: transcode-cache
          nfs:
            server: nfs.homelab
            path: /share/n0/system/tdarr/cache
        - name: video
          nfs:
            server: nfs.homelab
            path: /share/h0/multimedia/video
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tdarr-node
  annotations:
    app.kubernetes.io/name: tdarr-node
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: tdarr-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tdarr-node
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: "nas"
          operator: "Equal"
          value: "true"
          effect: NoSchedule
      # Ensure each node is running on separate Kubernetes node
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - tdarr-node
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      containers:
        - name: tdarr
          image: haveagitgat/tdarr_node:2.40.01
          imagePullPolicy: Always
          env:
            - name: TZ
              value: Europe/Kyiv
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: serverIP
              value: "0.0.0.0"
            - name: serverURL
              value: http://tdarr.home:8266
            - name: nodeID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          ports:
            - containerPort: 8265
              name: ui
            - containerPort: 8266
              name: server
          volumeMounts:
            - mountPath: /app/configs
              name: config
            - mountPath: /app/server
              name: server
            - mountPath: /app/logs
              name: logs
            - mountPath: /temp
              name: transcode-cache
            - mountPath: /video
              name: video
            # VIDEO
            - mountPath: /dev/dri
              name: dri
      volumes:
        - name: logs
          emptyDir: {}
        - name: config
          emptyDir: {}
        - name: server
          emptyDir: {}
        - name: transcode-cache
          nfs:
            server: nfs.homelab
            path: /share/n0/system/tdarr/cache
        - name: video
          nfs:
            server: nfs.homelab
            path: /share/h0/multimedia/video
        # VIDEO
        - name: dri
          hostPath:
            path: /dev/dri
