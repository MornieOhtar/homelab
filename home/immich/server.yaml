apiVersion: v1
kind: Service
metadata:
  name: immich-server
  labels:
    app.kubernetes.io/service: immich-server
    app.kubernetes.io/name: immich
spec:
  type: ClusterIP
  ports:
    - port: 2283
      targetPort: http
      protocol: TCP
      name: http
    - port: 8081
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: immich
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  labels:
    app.kubernetes.io/name: immich
  annotations:
    avp.kubernetes.io/path: "kv/data/argocd"
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: immich
  template:
    metadata:
      labels:
        app.kubernetes.io/name: immich
    spec:
      automountServiceAccountToken: false
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: immich-server
          image: ghcr.io/immich-app/immich-server:v1.125.7
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_VECTOR_EXTENSION
              value: pgvector
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: IMMICH_TELEMETRY_INCLUDE
              value: all
            - name: DB_DATABASE_NAME
              value: <immich-db-name>
            - name: DB_HOSTNAME
              value: <immich-db-host>
            - name: DB_PASSWORD
              value: <immich-db-password>
            - name: DB_USERNAME
              value: <immich-db-username>
            - name: REDIS_HOSTNAME
              value: <immich-redis-hostname>
          ports:
            - name: http
              containerPort: 2283
              protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
              ephemeral-storage: 128Mi
            limits:
              cpu: 2000m
              memory: 4Gi
              ephemeral-storage: 256Mi
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/server/ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/server/ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
      volumes:
        - name: library
          nfs:
            server: <NFS_STOR_0_SERVER>
            path: <NFS_STOR_0_PATH>/multimedia/gallery
