apiVersion: jenkins.io/v1alpha2
kind: Jenkins
metadata:
  name: mornery-main
  annotations:
    avp.kubernetes.io/path: "kv/data/argocd"
spec:
  configurationAsCode:
    configurations:
      - name: mornery-main
    secret:
      name: ""
  groovyScripts:
    configurations: []
    secret:
      name: ""
  jenkinsAPISettings:
    authorizationStrategy: createUser
  master:
    disableCSRFProtection: false
    basePlugins:
    - name: kubernetes
      version: "4324.vfec199a_33512"
    - name: workflow-job
      version: "1505.vea_4b_20a_4a_495"
    - name: workflow-aggregator
      version: "600.vb_57cdd26fdd7"
    - name: git
      version: "5.7.0"
    - name: job-dsl
      version: "1.91"
    - name: configuration-as-code
      version: "1932.v75cb_b_f1b_698d"
    - name: kubernetes-credentials-provider
      version: "1.273.v15e69b_55ea_8e"
    plugins:
    - name: junit
      version: "1317.v5b_35d792b_06a_"
    - name: pipeline-maven
      version: "1488.vfd8c04864236"
    - name: gitea
      version: "238.v626a_cf5e1940"
    - name: gitea-pat-kubernetes-credentials
      version: 17.vfe3747cad95a
    - name: sonar
      version: "2.18"
    - name: metrics
      version: 4.2.21-461.v881e35d8fa_b_a_
    - name: prometheus
      version: 819.v50953a_c560dd
    - name: oic-auth
      version: 4.487.v5eb_cdf31cf09
    - name:  role-strategy
      version: 756.v978cb_392eb_d3
    containers:
      - name: jenkins-master
        image: jenkins/jenkins:2.500-jdk21
        imagePullPolicy: IfNotPresent
        env:
        - name: TZ
          value: Europe/Kyiv
        - name: JAVA_OPTS
          value: >-
            -XX:MinRAMPercentage=50.0 -XX:MaxRAMPercentage=80.0
            -Djenkins.install.runSetupWizard=false -Djava.awt.headless=true
        command:
          - bash
          - '-c'
          - >-
            /var/jenkins/scripts/init.sh && exec /usr/bin/tini -s --
            /usr/local/bin/jenkins.sh
        livenessProbe:
          failureThreshold: 12
          httpGet:
            path: /login
            port: http
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /login
            port: http
            scheme: HTTP
          initialDelaySeconds: 80
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 256m
            memory: 500Mi
      - name: backup # container responsible for the backup and restore
        env:
          - name: TZ
            value: Europe/Kyiv
          - name: BACKUP_DIR
            value: /backup
          - name: JENKINS_HOME
            value: /jenkins-home
          - name: BACKUP_COUNT
            value: "3" # keep only the 2 most recent backups
        image: mornieohtar/jenkins-operator-backup-pvc:0.2.5 # look at backup/pvc directory
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /jenkins-home # Jenkins home volume
            name: jenkins-home
          - mountPath: /backup # backup volume
            name: backup
        resources:
          requests:
            cpu: 800m
            memory: 500Mi
    volumes:
      - name: backup
        nfs:
          server: <NFS_STOR_0_SERVER>
          path: <NFS_STOR_0_PATH>/backup/jenkins-mornery
  backup:
    containerName: backup # container name is responsible for backup
    action:
      exec:
        command:
          - /home/user/bin/backup.sh # this command is invoked on "backup" container to make backup, for example /home/user/bin/backup.sh <backup_number>, <backup_number> is passed by operator
    interval: 86400 # how often make backup in seconds
    makeBackupBeforePodDeletion: true # make a backup before pod deletion
  restore:
    containerName: backup # container name is responsible for restore backup
    action:
      exec:
        command:
          - /home/user/bin/restore.sh # this command is invoked on "backup" container to make restore backup, for example /home/user/bin/restore.sh <backup_number>, <backup_number> is passed by operator
    #recoveryOnce: <backup_number> # if want to restore specific backup configure this field and then Jenkins will be restarted and desired backup will be restored
    getLatestAction:
      exec:
        command:
          - /home/user/bin/get-latest.sh # this command is invoked on "backup" container to get la
  seedJobAgentImage: jenkins/inbound-agent:3283.v92c105e0f819-1
  seedJobs:
    - id: mornery
      targets: "cicd/jobs/*.jenkins"
      description: "Mornery Service Registry"
      credentialType: usernamePassword
      credentialID: jenkins-git
      repositoryBranch: master
      repositoryUrl: https://git.<homelab-domain>/Mornery/jenkins-cicd.git
