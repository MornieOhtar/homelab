## Install Prometheus Operator CRDs
##
crds:
  enabled: true

## Use standalone grafana installation
##
grafana:
  enabled: false

## Component scraping the kube controller manager
##
kubeControllerManager:
  service:
    enabled: true
    ports:
      http: 10257
    targetPorts:
      http: 10257
  serviceMonitor:
    https: false
    insecureSkipVerify: "true"

## Component scraping kube proxy
##
kubeProxy:
  enabled: true
  service:
    enabled: true
    port: 10249
    targetPort: 10249
  serviceMonitor:
    https: false
    insecureSkipVerify: "true"

## Component scraping kube scheduler
##
kubeScheduler:
  service:
    enabled: true
    ports:
      http: 10259
    targetPorts:
      http: 10259
  serviceMonitor:
    https: false
    insecureSkipVerify: "true"

## Configuration for kube-state-metrics subchart
##
kube-state-metrics:
  rbac:
    extraRules:
      - apiGroups: ["barmancloud.cnpg.io"]
        resources: ["objectstores"]
        verbs: ["list", "watch"]
  # Enabling support for customResourceState, will create a configMap including your config that will be read from kube-state-metrics
  customResourceState:
    # Whether to enable support for CustomResourceStateMetrics.
    enabled: true
    # Definition of the CustomResourceStateMetrics. Add (Cluster)Role permissions to list/watch the resources defined in the config to rbac.extraRules.
    config:
      spec:
        resources:
          - groupVersionKind:
              group: barmancloud.cnpg.io
              version: v1
              kind: ObjectStore
            labelsFromPath:
              namespace: [metadata, namespace]
              objectstore: [metadata, name]
            metrics:
              - name: cnpg_objectstore_last_successful_backup_timestamp
                help: "Last successful CNPG-I backup per cluster"
                each:
                  type: Gauge
                  gauge:
                    path: [status, serverRecoveryWindow]
                    valueFrom:
                      - lastSuccussfulBackupTime
                    valueType: Date
                    labelFromKey: cluster
              - name: cnpg_objectstore_first_recoverability_point_timestamp
                help: "First recoverability point per cluster"
                each:
                  type: Gauge
                  gauge:
                    path: [status, serverRecoveryWindow]
                    valueFrom:
                      - firstRecoverabilityPoint
                    valueType: Date
                    labelFromKey: cluster

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false # Primarily for empty default namespace selectors
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    podMonitorSelectorNilUsesHelmValues: false # Primarily for empty default namespace selectors
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    scrapeConfigSelectorNilUsesHelmValues: false # Primarily for empty default namespace selectors
    scrapeConfigSelector: {}
    scrapeConfigNamespaceSelector: {}
    scrapeInterval: 30s
    retention: 7d
    retentionSize: 10GiB
    remoteRead:
      - url: http://grafana-mimir-gateway.backend/api/v1/read
    remoteWrite:
      - url: http://grafana-mimir-gateway.backend/api/v1/push
  additionalServiceMonitors: []
  additionalPodMonitors: []
